{{#if urls}}
  <h1 class="shortener__url-title" style="text-align: center;" id="title">Your saved urls</h1>
{{else}}
  <h1 class="shortener__url-title" style="text-align: center;">You don't have any saved urls</h1>
{{/if}}
<div id="urls-list">
{{#each urls}}
  <div id={{id}} class="shortener__user-url__container">
    <div style="width: 70%; margin-right: 20px;">
      <h3 class="shortener__url-input__list" id='{{id}}input' style="word-break: break-all; overflow: hidden;">http://localhost:3000/url/{{id}}</h3>
      <input type="button" class="shortener__url-button__list" onclick="showUrl('{{url}}', '{{id}}')" value="show original url">
    </div>
    <div style="width: 30%;">
      <input type="button" id='{{id}}button' class="shortener__url-button__list" onclick="window.open('http://localhost:3000/url/{{id}}', '_blank').focus()" value="visit url">
      <input type="button" class="shortener__url-button__list" onclick="deleteURL('{{id}}')" value="delete">
    </div>
  </div>
{{/each}}
</div>
{{#if urls}}
  <input type="button" class="shortener__url-button" id="button" onclick="window.location = '/'" value="home">
  <input type="button" class="shortener__url-button" onclick="download()" value="download urls">
{{else}}
  <input type="button" class="shortener__url-button" onclick="window.location = '/'" value="Shorten a url">
{{/if}}
<form action="/logout" method="post">
  <input type="submit" class="shortener__url-button" value="log out">
</form>
<script>
  function showUrl(url, id) {
    const input = document.getElementById(id+'input')
    const button = document.getElementById(id+'button')
    const shortened = 'http://localhost:3000/url/' + id

    if (input.innerHTML === url) {
      input.innerHTML = shortened
      event.target.value = 'show original url'
      button.style.height = '55px'
      input.style.height = '55px'
    } else {
      input.innerHTML = url
      event.target.value = 'show shortened url'
      if (url.length > 64) {
        button.style.height = '110px'
        input.style.height = '110px'
      }
    }
  }

  async function deleteURL(id) {
    try {
      await fetch(`/url/${id}`, {
        method: 'DELETE'
      })
      document.getElementById(id).remove()
      if (document.getElementById('urls-list').innerText === '') {
        document.getElementById('title').innerHTML = "You don't have any saved urls"
        document.getElementById('button').value = "Shorten a url"
      }
    } catch (e) {
      console.log(e)
    }
  }

  function download() {
    // had to use a handlebars helper to format handlebars variables
    const data = {{json urls}}
    // change the id attribute to have the complete shortened url
    const transformedData = data.map(obj => {
      const newObj = { shortened: 'http://localhost:3000/url/' + obj.id, url: obj.url }
      return newObj
    })

    // the 3 at the end is the number of spaces to format the json
    const formatData = JSON.stringify(transformedData, null, 3)

    // octet-stream is raw binary data
    const blob = new Blob([formatData], { type: "octet-stream" })
    // files then is inside of the link for download, the link exist in browser memory
    // URL. create a url for the blob
    // url is stored in memory and must be removed at the end
    const href = URL.createObjectURL(blob)

    // way to add properties to an element, make a temporary a tag to download the information
    const a = Object.assign(document.createElement('a'), {
      href,
      style: "display:none",
      download: 'my-urls.json'
    })
    document.body.appendChild(a)

    a.click()
    // remove url
    URL.revokeObjectURL(href)
    a.remove()
  }

</script>