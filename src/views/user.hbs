{{#if urls}}
  <h1 class="shortener__url-title_users" id="title">Your saved urls</h1>
{{else}}
  <h1 class="shortener__url-title_users">You don't have any saved urls</h1>
{{/if}}
<ul id="urls-list">
{{#each urls}}
  <li id={{id}} class="shortener__user-url__container">
    <div>
      <h3 class="shortener__url-input__list" id='{{id}}input'>{{../urlName}}/url/{{id}}</h3>
      <input type="button" class="shortener__url-button__list" id="{{id}}show" value="show original url">
    </div>
    <div>
      <input type="button" id='{{id}}redirect' class="shortener__url-button__list" value="visit url">
      <input type="button" class="shortener__url-button__list" id="{{id}}delete" value="delete">
    </div>
  </li>
{{/each}}
</ul>
{{#if urls}}
  <input type="button" class="shortener__url-button" id="home" value="home">
  <input type="button" class="shortener__url-button" id="download" value="download urls">
{{else}}
  <input type="button" class="shortener__url-button" id="home" value="Shorten a url">
{{/if}}
<form action="/logout" method="post">
  <input type="submit" class="shortener__url-button" value="log out">
</form>
<script nonce={{scriptN}}>
  const urlName = {{json urlName}}

  function showUrl(id, url) {
    const input = document.getElementById(id+'input')
    const button = document.getElementById(id+'redirect')
    const shortened = `${urlName}/url/${id}`

    if (input.innerText === url) {
      input.innerText = shortened
      event.target.value = 'show original url'
      button.style.height = '55px'
      input.style.height = '55px'
    } else {
      input.innerText = url
      event.target.value = 'show shortened url'
      if ((url.length > 50 && window.innerWidth < 1000 ) || url.length > 64) {
        button.style.height = '110px'
        input.style.height = '110px'
      }
    }
  }

  async function deleteURL(id) {
    try {
      await fetch(`/url/${id}`, {
        method: 'DELETE'
      })
      document.getElementById(id).remove()
      if (document.getElementById('urls-list').innerText === '') {
        document.getElementById('title').innerHTML = "You don't have any saved urls"
        document.getElementById('home').value = "Shorten a url"
      }
    } catch (e) {
      console.log(e)
    }
  }

  function download(data) {
    // change the id attribute to have the complete shortened url
    const transformedData = data.map(obj => {
      const newObj = { shortened: `${urlName}/url/${obj.id}`, url: obj.url }
      return newObj
    })

    // the 3 at the end is the number of spaces to format the json
    const formatData = JSON.stringify(transformedData, null, 3)

    // octet-stream is raw binary data
    const blob = new Blob([formatData], { type: "octet-stream" })
    // files then is inside of the link for download, the link exist in browser memory
    // URL. create a url for the blob
    // url is stored in memory and must be removed at the end
    const href = URL.createObjectURL(blob)

    // way to add properties to an element, make a temporary a tag to download the information
    const a = Object.assign(document.createElement('a'), {
      href,
      style: "display:none",
      download: 'my-urls.json'
    })
    document.body.appendChild(a)

    a.click()
    // remove url
    URL.revokeObjectURL(href)
    a.remove()
  }

  const listArray = document.querySelectorAll('li')
  if (listArray.length > 0) {
    // had to use a handlebars helper to format handlebars variables
    const urls = {{json urls}}
    const urlsObj = {}
    urls.forEach(url => {
      urlsObj[url.id] = url.url
    })

    listArray.forEach(element => {
      document.getElementById(`${element.id}show`).addEventListener('click', () => showUrl(element.id, urlsObj[element.id]))
      document.getElementById(`${element.id}redirect`).addEventListener('click', () => window.open(`${urlName}/url/${element.id}`, '_blank').focus())
      document.getElementById(`${element.id}delete`).addEventListener('click', () => deleteURL(element.id))
    })
    document.getElementById('download').addEventListener('click', () => download(urls))
  }
  document.getElementById('home').addEventListener('click', () => window.location = '/')
</script>
